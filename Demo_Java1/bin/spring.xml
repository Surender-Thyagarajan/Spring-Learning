<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

<!--  Bean Inheritance is possible using the parent keyword and is done to inherit common definitions of bean
	  Here the bean Triangle inherits other bean parentTriangle and it's definitions
	  But notice that the Triangle bean needs more than one point and hence using merge = true it creates three objects in total
	  By default, the merge is false and it overrides the existing parent bean definition
	  If the parent is configured as an abstract bean.. then the parent bean is not instantiated or created... the child classes just uses the parent bean's configurations
 -->

	<bean id = "parentTriangle" class = "org.surender.demo.Triangle" abstract = "true" init-method = "HelloWorld">
		<property name= "points">
			<list>
				<ref bean = "pointA" />
			</list>
		</property>
	</bean>
	
	<bean id = "Triangle" class ="org.surender.demo.Triangle" parent="parentTriangle" >
		<property name= "points" >
		<list merge = "true">		
			<ref bean = "pointB" />
			<ref bean = "pointC" />
		</list>
		</property>
	</bean>
	
	<bean id = "pointA" class = "org.surender.demo.Point">
		<property name ="xPoint" value = "0" />
		<property name ="yPoint" value = "20" />
	</bean>
	
	<bean id = "pointB" class = "org.surender.demo.Point">
		<property name ="xPoint" value = "20" />
		<property name ="yPoint" value = "20" />
	</bean>
	
	<bean id = "pointC" class = "org.surender.demo.Point">
		<property name ="xPoint" value = "30" />
		<property name ="yPoint" value = "20" />
	</bean>
	
</beans>